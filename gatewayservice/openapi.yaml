openapi: 3.0.0
info:
  title: Gatewayservice API
  description: Gateway OpenAPI specification.
  version: 0.2.0
servers:
  - url: http://localhost:8000
    description: Development server
  - url: http://98.66.177.253:8000
    description: Production server
paths:
  /login:
    post:
      summary: Log in to the system.
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: User ID.
                  example: student
                password:
                  type: string
                  description: User password.
                  example: pass
      responses:
        "200":
          description: Login successful. Returns user token, username, and creation date.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: User token.
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2UzY2ZiZGY1MzJmZmMwYTk1MzNjMmUiLCJ1c2VybmFtZSI6IlRlc3QiLCJpYXQiOjE3NDM0MzIwODUsImV4cCI6MTc0MzQzNTY4NX0.2O6lbAOkuEdJBaZNP7YmfAGgrL6gGt9E6dEa1Lrb7R4
                  username:
                    type: string
                    description: Username.
                    example: student
                  createdAt:
                    type: string
                    description: Creation date.
                    example: "2025-03-26T09:58:21.422Z"
        "400":
          description: Invalid request parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: An error for the localized template telling some field is missing.
                    example: "logIn.errors.missingFields"
        "401":
          description: Invalid credentials.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A messaage with the localization for the invalid credentials message.
                    example: "logIn.errors.invalidCredentials"
        "500":
          description: Some error ocurred in the server when processing the request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Internal Server Error
  /adduser:
    post:
      summary: Add a new user to the database.
      operationId: addUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: User ID.
                  example: student
                password:
                  type: string
                  description: User password.
                  example: pass
      responses:
        "200":
          description: User added successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: User token.
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2VhYTkyM2FlZTYxNThkZTJjOGEyMDciLCJpYXQiOjE3NDM0MzE5NzEsImV4cCI6MTc0MzQzNTU3MX0.7lC7CSStyWlxOYxwgU7N1iPodiKHTD9Jq7e09Wa-VFc
                  username:
                    type: string
                    description: User ID.
                    example: student
                  createdAt:
                    type: string
                    description: Creation date.
                    example: "2025-03-31T14:39:31.025Z"
        "500":
          description: Failed to add user, there was an error in the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: getaddrinfo ENOTFOUND mongodb
  /default-images/{imageName}:
    get:
      summary: Retrieve a default profile image.
      operationId: defaultImage
      parameters:
        - name: imageName
          in: path
          required: true
          description: The name of the image to retrieve.
          schema:
            type: string
            example: image_1.png
      responses:
        "200":
          description: Image retrieved correctly.
          content:
            image/*:
              schema:
                type: string
                format: binary
                description: The image data.
        "404":
          description: Image not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Request failed with status code 404
        "500":
          description: Failed to retrieve the image due to a server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Internal Server Error
  /users/{username}:
    patch:
      summary: Update the user information.
      operationId: updateUser
      security:
        - bearerAuth: []
      parameters:
        - name: username
          in: path
          required: true
          description: The username of the account to update. Must match the authenticated user.
          schema:
            type: string
            example: currentUsername
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The new username, if wanted to be modified.
                  example: newUsername
                password:
                  type: string
                  description: The new password, if wanted to be modified.
                  example: "NewPassword123!"
                passwordRepeat:
                  type: string
                  description: Confirmation of the new password.
                  example: "NewPassword123!"
      responses:
        "200":
          description: User updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful.
                    example: true
                  newUsername:
                    type: string
                    description: The account username after the operations.
                    example: newUsername
                  token:
                    type: string
                    description: New JWT token (only provided if username was changed).
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2N2VhYTkyM2FlZTYxNThkZTJjOGEyMDciLCJpYXQiOjE3NDM0MzE5NzEsImV4cCI6MTc0MzQzNTU3MX0.7lC7CSStyWlxOYxwgU7N1iPodiKHTD9Jq7e09Wa-VFc
                  message:
                    type: string
                    description: Message describing the result.
                    example: User updated successfully
        "400":
          description: Invalid request parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: "signUp.errors.passwordsDoNotMatch"
        "401":
          description: User token is missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: "Authorization header missing"
        "403":
          description: Invalid user modifying the data (username is not the same as the one in the token).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: "You can only update your own account"
        "404":
          description: User not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: "User not found"
        "500":
          description: Failed to update user due to a server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: "Internal Server Error"
  /users/{username}/image:
    get:
      summary: Retrieve the profile image of a user.
      operationId: userImage
      parameters:
        - name: username
          in: path
          required: true
          description: The username of the user whose image is to be retrieved.
          schema:
            type: string
            example: student
      responses:
        "200":
          description: Image retrieved correctly.
          content:
            image/png:
              schema:
                type: string
                format: binary
                description: The binary image data.
        "404":
          description: User is not found or image path is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: User not found
        "500":
          description: Failed to retrieve the image due to a server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Internal Server Error
  /users/{username}/default-image:
    post:
      summary: Updates a user's profile image to one of the default images.
      operationId: defaultUserImage
      parameters:
        - name: username
          in: path
          required: true
          description: The username of the user whose image will be updated. Must match the authenticated user.
          schema:
            type: string
            example: student
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  description: The name of the default image to set.
                  example: image_13.png
      responses:
        "200":
          description: Image updated correctly.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful.
                    example: true
                  message:
                    type: string
                    description: Message describing the result.
                    example: Image updated successfully
                  imagePath:
                    type: string
                    description: Path to the updated image.
                    example: /images/default/image_13.png
        "400":
          description: Default image is missing in the body.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: No default image provided
        "401":
          description: User token is missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
                    example: Authorization header missing
        "403":
          description: User is trying to update another user's image.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
                    example: You can only update your own account
        "404":
          description: User is not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: User not found
        "500":
          description: Failed to upload the image due to a server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Internal Server Error
  /users/{username}/custom-image:
    post:
      summary: Updates a user's profile image by uploading a new one.
      operationId: customUserImage
      parameters:
        - name: username
          in: path
          required: true
          description: The username of the user whose image will be updated. Must match the authenticated user.
          schema:
            type: string
            example: student
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: The image file to upload.
      responses:
        "200":
          description: Image updated correctly.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful.
                    example: true
                  message:
                    type: string
                    description: Message describing the result.
                    example: Image updated successfully
                  imagePath:
                    type: string
                    description: Path to the updated image.
                    example: /images/custom/student-1715014891234.png
        "400":
          description: File is missing or is not an image.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: profile.errors.invalidImage
        "401":
          description: User token is missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
                    example: Authorization header missing
        "403":
          description: User is trying to update another user's image.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
                    example: You can only update your own account
        "404":
          description: User is not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: User not found
        "500":
          description: Failed to upload the image due to a server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Internal Server Error
    /profile/{username}:
      get:
        summary: Retrieves profile statistics of a specific user.
        operationId: userProfile
        security:
          - bearerAuth: []
        parameters:
          - name: username
            in: path
            required: true
            description: The username of the user to retrieve the profile.
            schema:
              type: string
              example: student
        responses:
          "200":
            description: Profile retrieved correctly.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    username:
                      type: string
                      description: User ID.
                      example: student
                    gamesPlayed:
                      type: integer
                      description: Total number of games played.
                      example: 42
                    registrationDate:
                      type: string
                      format: date-time
                      description: When the user registered.
                      example: "2025-03-31T14:39:31.025Z"
                    totalVisits:
                      type: integer
                      description: Number of profile visits by other users.
                      example: 157
                    isProfileOwner:
                      type: boolean
                      description: Whether the requesting user is the profile owner.
                      example: true
                    globalStatistics:
                      type: object
                      description: Aggregated game statistics across all game types.
                      properties:
                        questionsAnswered:
                          type: integer
                          description: Total questions answered.
                          example: 520
                        correctAnswers:
                          type: integer
                          description: Total correct answers.
                          example: 372
                        incorrectAnswers:
                          type: integer
                          description: Total incorrect answers.
                          example: 148
                        maxScore:
                          type: integer
                          description: Highest score achieved in any game.
                          example: 950
                        gamesPlayed:
                          type: integer
                          description: Total games played.
                          example: 42
                        maxCorrectAnswers:
                          type: integer
                          description: Most correct answers in a single game.
                          example: 23
                    classicalStatistics:
                      type: object
                      description: Statistics for classical game mode.
                      properties:
                        questionsAnswered:
                          type: integer
                          example: 210
                        correctAnswers:
                          type: integer
                          example: 168
                        incorrectAnswers:
                          type: integer
                          example: 42
                        maxScore:
                          type: integer
                          example: 840
                        gamesPlayed:
                          type: integer
                          example: 21
                        maxCorrectAnswers:
                          type: integer
                          example: 20
                    suddenDeathStatistics:
                      type: object
                      description: Statistics for sudden death game mode.
                      properties:
                        questionsAnswered:
                          type: integer
                          example: 95
                        correctAnswers:
                          type: integer
                          example: 95
                        incorrectAnswers:
                          type: integer
                          example: 0
                        maxScore:
                          type: integer
                          example: 950
                        gamesPlayed:
                          type: integer
                          example: 8
                        maxCorrectAnswers:
                          type: integer
                          example: 23
                    timeTrialStatistics:
                      type: object
                      description: Statistics for time trial game mode.
                      properties:
                        questionsAnswered:
                          type: integer
                          example: 175
                        correctAnswers:
                          type: integer
                          example: 82
                        incorrectAnswers:
                          type: integer
                          example: 93
                        maxScore:
                          type: integer
                          example: 410
                        gamesPlayed:
                          type: integer
                          example: 7
                        maxCorrectAnswers:
                          type: integer
                          example: 12
                    customStatistics:
                      type: object
                      description: Statistics for custom game mode.
                      properties:
                        questionsAnswered:
                          type: integer
                          example: 24
                        correctAnswers:
                          type: integer
                          example: 16
                        incorrectAnswers:
                          type: integer
                          example: 8
                        maxScore:
                          type: integer
                          example: 160
                        gamesPlayed:
                          type: integer
                          example: 3
                        maxCorrectAnswers:
                          type: integer
                          example: 8
                    qodStatistics:
                      type: object
                      description: Statistics for question of the day mode.
                      properties:
                        questionsAnswered:
                          type: integer
                          example: 16
                        correctAnswers:
                          type: integer
                          example: 11
                        incorrectAnswers:
                          type: integer
                          example: 5
                        maxScore:
                          type: integer
                          example: 10
                        gamesPlayed:
                          type: integer
                          example: 16
                        maxCorrectAnswers:
                          type: integer
                          example: 1
                    recentVisitors:
                      type: array
                      description: List of recent profile visitors (only available to profile owner).
                      items:
                        type: object
                        properties:
                          username:
                            type: string
                            description: Username of the visitor.
                            example: "visitor123"
                          date:
                            type: string
                            format: date-time
                            description: When the visit occurred.
                            example: "2025-05-01T11:42:53.217Z"
          "400":
            description: Invalid username format.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      description: Error information.
                      example: Invalid username format
          "401":
            description: Authentication required.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      description: Error information.
                      example: Authorization header missing
          "403":
            description: Invalid or expired token.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      description: Error information.
                      example: Invalid or expired token
          "404":
            description: User not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      description: Error information.
                      example: statistics.errors.userNotFound
          "500":
            description: Server error when processing the request.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      description: Error information.
                      example: Internal Server Error
  /askllm:
    post:
      summary: Send a question to the LLM.
      operationId: askLLM
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gameQuestion:
                  type: string
                  description: Question being showed in the game.
                  example: Which of the following flags belongs to Austria?
                userQuestion:
                  type: string
                  description: Question performed by the user.
                  example: Does it contain the red color?
      responses:
        "200":
          description: The LLM responded successfully, answering the question.
          content:
            application/json:
              schema:
                type: object
                properties:
                  answer:
                    type: string
                    description: LLM answer.
                    example: The color of the flag is a key indicator. It starts with a simple yet distinctive design that many people recognize.
        "400":
          description: Some required data is missing (gameQuestion or userQuestion).
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    description: List of missing fields.
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          description: Type of error.
                          example: field
                        msg:
                          type: string
                          description: Error message.
                          example: Question is required
                        path:
                          type: string
                          description: Field that caused the error.
                          example: gameQuestion
                        location:
                          type: string
                          description: Location of the error in the request.
                          example: body
              example:
                errors:
                  - type: field
                    msg: The game question is required
                    path: gameQuestion
                    location: body
                  - type: field
                    msg: The user question is required
                    path: userQuestion
                    location: body
        "500":
          description: API key is missing or some error ocurred in the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    description: Error content.
                    example: API key is missing.
  /simplellm:
    post:
      summary: Send a simple message to the LLM.
      operationId: simpleLLM
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Message to be sent to the LLM.
                  example: Greet the user called john.
      responses:
        "200":
          description: The LLM responded successfully, with a message.
          content:
            application/json:
              schema:
                type: object
                properties:
                  answer:
                    type: string
                    description: LLM answer.
                    example: Hello john, welcome to the game!
        "400":
          description: Some required data is missing (message).
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    description: List of missing fields.
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          description: Type of error.
                          example: field
                        msg:
                          type: string
                          description: Error message.
                          example: Question is required
                        path:
                          type: string
                          description: Field that caused the error.
                          example: gameQuestion
                        location:
                          type: string
                          description: Location of the error in the request.
                          example: body
              example:
                errors:
                  - type: field
                    msg: The message is required
                    path: message
                    location: body
        "500":
          description: API key is missing or some error ocurred in the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    description: Error content.
                    example: API key is missing.
  /answer:
    post:
      summary: Checks if the answer for some question is correct.
      operationId: answer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                questionId:
                  type: string
                  description: The ID of the question.
                  example: jwhwz7icbvitz82b58d2
                answer:
                  type: string
                  description: The image the user selected.
                  example: http://commons.wikimedia.org/wiki/Special:FilePath/Flag%20of%20Costa%20Rica.svg
      responses:
        "200":
          description: The answer was checked correctly.
          content:
            application/json:
              schema:
                type: object
                properties:
                  correct:
                    type: boolean
                    description: Whether the answer was correct or not.
                    example: true
                  correctOption:
                    type: string
                    description: The correct option for the question.
                    example: http://commons.wikimedia.org/wiki/Special:FilePath/Flag%20of%20Vietnam.svg
        "500":
          description: The answer could not be validated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.
                    example: Failed to validate answer
  /question:
    get:
      summary: Retrieves a new question.
      operationId: getQuestion
      responses:
        "200":
          description: The question was retrieved correctly.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique identifier for the question.
                    example: mpzulblyui9du98pmodg5o
                  imageType:
                    type: string
                    description: Type of image used in the question. Returns a string with the localization of the type.
                    example: game.imagTypes.flag
                  relation:
                    type: string
                    description: Relation of the question. Returns a string with the localization of the relation.
                    example: game.relations.belongsTo
                  topic:
                    type: string
                    description: Topic of the question.
                    example: Catedral de la Almudena
                  images:
                    type: array
                    description: List of image URLs related to the question.
                    items:
                      type: string
                      format: uri
                    example:
                      - "http://commons.wikimedia.org/wiki/Special:FilePath/Flag%20of%20Nepal.svg"
                      - "http://commons.wikimedia.org/wiki/Special:FilePath/Flag%20of%20Myanmar.svg"
                      - "http://commons.wikimedia.org/wiki/Special:FilePath/Flag%20of%20Costa%20Rica.svg"
                      - "http://commons.wikimedia.org/wiki/Special:FilePath/Flag%20of%20Yemen.svg"
        "500":
          description: The question could not be retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.
                    example: Failed to fetch question
  /question/{questionType}:
    get:
      summary: Retrieves a question of a specific type.
      operationId: getQuestionByType
      parameters:
        - name: questionType
          in: path
          required: true
          description: The type of question to retrieve.
          schema:
            type: string
            example: flags
      responses:
        "200":
          description: The question was retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique identifier for the question.
                    example: mpzulblyui9du98pmodg5o
                  question:
                    type: string
                    description: The text of the question.
                    example: Which of the following flags belongs to Nepal?
                  images:
                    type: array
                    description: List of image URLs related to the question.
                    items:
                      type: string
                      format: uri
                    example:
                      - "http://commons.wikimedia.org/wiki/Special:FilePath/Flag%20of%20Nepal.svg"
                      - "http://commons.wikimedia.org/wiki/Special:FilePath/Flag%20of%20Myanmar.svg"
                      - "http://commons.wikimedia.org/wiki/Special:FilePath/Flag%20of%20Costa%20Rica.svg"
                      - "http://commons.wikimedia.org/wiki/Special:FilePath/Flag%20of%20Yemen.svg"
        "400":
          description: Invalid question type provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
                    example: Invalid question type
        "500":
          description: The question could not be retrieved due to a server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
                    example: Internal Server Error
  /question-of-the-day:
    get:
      summary: Retrieves the question of the day.
      operationId: getQuestionOfTheDay
      responses:
        "200":
          description: The question of the day was retrieved correctly.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique identifier for the question.
                    example: mpzulblyui9du98pmodg5o
                  question:
                    type: string
                    description: The text of the question.
                    example: Which of the following flags belongs to Nepal?
                  images:
                    type: array
                    description: List of image URLs related to the question.
                    items:
                      type: string
                      format: uri
                    example:
                      - "http://commons.wikimedia.org/wiki/Special:FilePath/Flag%20of%20Nepal.svg"
                      - "http://commons.wikimedia.org/wiki/Special:FilePath/Flag%20of%20Myanmar.svg"
                      - "http://commons.wikimedia.org/wiki/Special:FilePath/Flag%20of%20Costa%20Rica.svg"
                      - "http://commons.wikimedia.org/wiki/Special:FilePath/Flag%20of%20Yemen.svg"
        "500":
          description: The question of the day could not be retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.
                    example: Failed to fetch question of the day
  /statistics:
    get:
      summary: Retrieves statistics for all users with filtering and pagination.
      operationId: statistics
      security:
        - bearerAuth: []
      parameters:
        - name: sort
          in: query
          required: false
          description: Field to sort by.
          schema:
            type: string
            enum: [username, gamesPlayed, questionsAnswered, correctAnswers, incorrectAnswers, accuracy, totalScore, maxScore, registrationDate]
            default: totalScore
        - name: order
          in: query
          required: false
          description: Sort order.
          schema:
            type: string
            enum: [asc, desc]
            default: desc
        - name: limit
          in: query
          required: false
          description: Maximum number of results to return (1-100).
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
        - name: offset
          in: query
          required: false
          description: Number of results to skip for pagination.
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: gameType
          in: query
          required: false
          description: Filter by game type.
          schema:
            type: string
            enum: [classical, suddenDeath, timeTrial, qod, custom]
        - name: minGames
          in: query
          required: false
          description: Filter by minimum number of games played.
          schema:
            type: integer
            minimum: 0
        - name: minScore
          in: query
          required: false
          description: Filter by minimum total score.
          schema:
            type: integer
            minimum: 0
        - name: registeredBefore
          in: query
          required: false
          description: Filter users registered before this date (YYYY-MM-DD or ISO format).
          schema:
            type: string
            format: date-time
        - name: registeredAfter
          in: query
          required: false
          description: Filter users registered after this date (YYYY-MM-DD or ISO format).
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: Statistics retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    description: List of user statistics.
                    items:
                      type: object
                      properties:
                        username:
                          type: string
                          description: Username.
                          example: "player123"
                        registrationDate:
                          type: string
                          format: date-time
                          description: When the user registered.
                          example: "2025-03-31T14:39:31.025Z"
                        gamesPlayed:
                          type: integer
                          description: Total number of games played.
                          example: 42
                        questionsAnswered:
                          type: integer
                          description: Total questions answered.
                          example: 520
                        correctAnswers:
                          type: integer
                          description: Total correct answers.
                          example: 372
                        incorrectAnswers:
                          type: integer
                          description: Total incorrect answers.
                          example: 148
                        accuracy:
                          type: number
                          format: float
                          description: Percentage of correct answers.
                          example: 71.53
                        totalScore:
                          type: integer
                          description: Total score across all games.
                          example: 3720
                        maxScore:
                          type: integer
                          description: Highest score in a single game.
                          example: 950
                  pagination:
                    type: object
                    properties:
                      total:
                        type: integer
                        description: Total number of users matching the filters.
                        example: 127
                      limit:
                        type: integer
                        description: Number of results per page.
                        example: 50
                      offset:
                        type: integer
                        description: Number of results skipped.
                        example: 0
                      hasMore:
                        type: boolean
                        description: Whether there are more results available.
                        example: true
        "400":
          description: Invalid query parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
                    example: "Invalid sort field"
        "401":
          description: Authentication required.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
                    example: "Authorization header missing"
        "403":
          description: Invalid or expired token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
                    example: "Invalid or expired token"
        "500":
          description: Server error when processing the request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
                    example: "Internal Server Error"
    post:
      summary: Updates the user in session's statistics.
      operationId: statisticsUpdate
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gamesPlayed:
                  type: integer
                  description: Number of games to add to the user's total.
                  example: 1
                questionsAnswered:
                  type: integer
                  description: Number of questions to add to the user's total.
                  example: 10
                correctAnswers:
                  type: integer
                  description: Number of correct answers to add to the user's total.
                  example: 7
                incorrectAnswers:
                  type: integer
                  description: Number of incorrect answers to add to the user's total.
                  example: 3
      responses:
        "200":
          description: The statistics were updated correctly and are retrieved back.
          content:
            application/json:
              schema:
                type: object
                properties:
                  gamesPlayed:
                    type: integer
                    description: Updated total number of games played.
                    example: 17
                  questionsAnswered:
                    type: integer
                    description: Updated total number of questions answered.
                    example: 34
                  correctAnswers:
                    type: integer
                    description: Updated total number of correct answers.
                    example: 26
                  incorrectAnswers:
                    type: integer
                    description: Updated total number of incorrect answers.
                    example: 8
        "400":
          description: The user input is invalid. Some statistic is not a number.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.
                    example: "Invalid input: All statistics must be numbers."
        "401":
          description: User token is missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.
                    example: "Authorization header missing"
        "403":
          description: User token is invalid or expired.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.
                    example: "Invalid or expired token"
        "404":
          description: User not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.
                    example: "statistics.errors.userNotFound"
        "500":
          description: Some error occurred in the server when processing the request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message.
                    example: "Internal Server Error"
  /recordGame:
    post:
      summary: Records a game played by the user.
      operationId: recordGame
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - gameType
                - score
                - questionsAnswered
                - correctAnswers
                - incorrectAnswers
              properties:
                gameType:
                  type: string
                  description: Type of game played.
                  enum: [classical, suddenDeath, timeTrial, qod, custom]
                  example: classical
                score:
                  type: integer
                  description: Score achieved in the game.
                  example: 850
                questionsAnswered:
                  type: integer
                  description: Total questions attempted in this game.
                  example: 20
                correctAnswers:
                  type: integer
                  description: Number of correct answers in the game.
                  example: 15
                incorrectAnswers:
                  type: integer
                  description: Number of incorrect answers in the game.
                  example: 5
      responses:
        "200":
          description: The game was recorded successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Confirmation message.
                    example: Game recorded successfully
        "400":
          description: Invalid input data for recording the game.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
                    example: Invalid input data for recording the game.
        "401":
          description: User token is missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
                    example: Authorization header missing
        "403":
          description: User token is invalid or expired.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
                    example: Invalid or expired token
        "404":
          description: User not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
                    example: statistics.errors.userNotFound
        "500":
          description: Server error when processing the request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
                    example: Internal Server Error
  /health:
    get:
      summary: Check the health status of the service.
      operationId: checkHealth
      responses:
        "200":
          description: Service is healthy.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Health status.
                    example: OK
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
