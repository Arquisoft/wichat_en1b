openapi: 3.0.0
info:
  title: Gatewayservice API
  description: Gateway OpenAPI specification.
  version: 0.2.0
servers:
  - url: http://localhost:8000
    description: Development server
  - url: http://SOMEIP:8000
    description: Production server
paths:
  /login:
      post:
        summary: Log in to the system.
        operationId: loginUser
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    description: User ID.
                    example: student
                  password:
                    type: string
                    description: User password.
                    example: pass
        responses:
          '200':
            description: Login successful. Returns user token, username, and creation date.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    token:
                      type: string
                      description: User token.
                      example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NWY3NTZkYjNmYTIyZDIyN2E0YjdjN2QiLCJpYXQiOjE3MTA3MDg3NDUsImV4cCI6MTcxMDcxMjM0NX0.VMG_5DOyQ4GYlJQRcu1I6ICG1IGzuo2Xuei093ONHxw
                    username:
                      type: string
                      description: Username.
                      example: student
                    createdAt:
                      type: string
                      description: Creation date.
                      example: '2024-03-17T20:47:23.935Z'
          '400':
            description: Invalid request parameters.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      description: Error information.
          '401':
            description: Invalid credentials.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      description: Shows the error info..
                      example: Invalid credentials
          '500':
            description: Internal server error.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      description: Error information.
                      example: Internal Server Error
  /adduser:
    post:
      summary: Add a new user to the database.
      operationId: addUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: User ID.
                  example: student
                password:
                  type: string
                  description: User password.
                  example: pass
      responses:
        '200':
          description: User added successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: User token.
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9mYTIyZDIyN2E0YjdjN2QiLCJpYXQiOjE3MTA3MDg3NDUsImV4cCI6MTcxMDcxMjM0NX0.VMG_5DOyQ4GYlJQRcu1I6ICG1IGzuo2Xuei093ONHxw...
                  username:
                    type: string
                    description: User ID.
                    example: student
                  createdAt:
                    type: string
                    description: Creation date.
                    example: '2024-03-17T20:47:23.935Z'                                     
        '400':
          description: Failed to add user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: getaddrinfo EAI_AGAIN mongodb
  /askllm:
    post:
      summary: Send a question to the LLM.
      operationId: askLLM
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gameQuestion:
                  type: string
                  description: Question being showed in the game.
                  example: Which of the following flags belongs to Austria?
                userQuestion:
                  type: string
                  description: Question performed by the user.
                  example: Does it contain the red color?
      responses:
        '200':
          description: The LLM responded successfully, answering the question.
          content:
            application/json:
              schema:
                type: object
                properties:
                  answer:
                    type: string
                    description: LLM answer.
                    example: The color of the flag is a key indicator. It starts with a simple yet distinctive design that many people recognize.                
        '400':
          description: Some required data is missing (gameQuestion or userQuestion).
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    description: Missing fields.
        '500':
          description: API key is missing or some error ocurred in the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    description: Error content.
                    example: API key is missing.
  /health:
    get:
      summary: Check the health status of the service.
      operationId: checkHealth
      responses:
        '200':
          description: Service is healthy.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Health status.
                    example: OK